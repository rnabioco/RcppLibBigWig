// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// read_bigwig_impl
DataFrame read_bigwig_impl(std::string bwfname, std::string chrom, int start, int end);
RcppExport SEXP _bigwrig_read_bigwig_impl(SEXP bwfnameSEXP, SEXP chromSEXP, SEXP startSEXP, SEXP endSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type bwfname(bwfnameSEXP);
    Rcpp::traits::input_parameter< std::string >::type chrom(chromSEXP);
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< int >::type end(endSEXP);
    rcpp_result_gen = Rcpp::wrap(read_bigwig_impl(bwfname, chrom, start, end));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bigwrig_read_bigwig_impl", (DL_FUNC) &_bigwrig_read_bigwig_impl, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_bigwrig(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
